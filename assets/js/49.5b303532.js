(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{426:function(t,s,e){"use strict";e.r(s);var a=e(46),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"incubation-exit-guide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#incubation-exit-guide"}},[t._v("#")]),t._v(" Incubation Exit Guide")]),t._v(" "),e("p",[t._v("After each phase of the incubator is over, miners face the problem of withdrawing. Currently there are lotus and venus implementations of Filecoin mainnet. Therefore, the exit options available to miners areï¼š")]),t._v(" "),e("ul",[e("li",[t._v("Access to venus chain services built by other operators or participate in the second phase of the incubator;")]),t._v(" "),e("li",[t._v("Access the venus chain service built by yourself;")]),t._v(" "),e("li",[t._v("Switch back to lotus.")])]),t._v(" "),e("p",[t._v("The above is the optional exit plan for miners at the current stage. Here we explain how to access the venus chain service built by yourself and switch back to the lotus plan one by one.")]),t._v(" "),e("h3",{attrs:{id:"switch-back-to-your-own-venus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#switch-back-to-your-own-venus"}},[t._v("#")]),t._v(" Switch back to your own venus")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Build the chain service layer, refer to the document "),e("RouterLink",{attrs:{to:"/master/Chain_service_construction.html"}},[t._v("Chain service construction")])],1)]),t._v(" "),e("li",[e("p",[t._v("Modify the "),e("code",[t._v("venus-wallet")]),t._v(" configuration ("),e("code",[t._v("~/.venus_wallet/config.toml")]),t._v(") to point to the local chain service.")])])]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("APIRegisterHub")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("RegisterAPI")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/<IP_ADDRESS_OF_VENUS_GATEWAY>/tcp/45132"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Token")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<AUTH_TOKEN_FOR_ACCOUNT_NAME>"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("SupportAccounts")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ACCOUNT_NAME>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Modify the configuration of "),e("code",[t._v("venus-sealer")]),t._v(" ("),e("code",[t._v("~/.venussealer/config.toml")]),t._v(") to point to the local chain service.")])]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Node")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Url")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/<IP_ADDRESS_OF_VENUS>/tcp/3453"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Token")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <AUTH_TOKEN_FOR_ACCOUNT_NAME>\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("JWT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Secret")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8e5e90ad4c6ce64e16f4bd20622ad60b9b236caefb97081f09b53acfa75e6a44"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Messager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Url")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" /ip4/<IP_ADDRESS_OF_VENUS_MESSAGER>/tcp/<PORT_OF_VENUS_MESSAGER>\n  "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Token")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <AUTH_TOKEN_FOR_ACCOUNT_NAME>\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("RegisterProof")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Urls")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/<IP_ADDRESS_OF_VENUS_GATEWAY>/tcp/<PORT_OF_VENUS_GATEWAY>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Token")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <AUTH_TOKEN_FOR_ACCOUNT_NAME>\n")])])]),e("ul",[e("li",[t._v("Restart "),e("code",[t._v("venus-walle")]),t._v(" --\x3e "),e("code",[t._v("venus-sealer")]),t._v(".")])]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/guide/Using-venus-Shared-Modules.html"}},[t._v("Reference documents")])],1),t._v(" "),e("h3",{attrs:{id:"switch-back-to-lotus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#switch-back-to-lotus"}},[t._v("#")]),t._v(" Switch back to lotus")]),t._v(" "),e("ul",[e("li",[t._v("To build a lotus synchronization node, the current chain data is already very large, it is recommended to import the data from the snapshot.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./lotus daemon --import-snapshot"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://fil-chain-snapshots-fallback.s3.amazonaws.com/mainnet/minimal_finality_stateroots_latest.car "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lotus.log "),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),e("p",[t._v("You can also download the snapshot to the local first, and then "),e("code",[t._v("--import-snapshot")]),t._v(" points to the local path.")]),t._v(" "),e("ul",[e("li",[t._v("Import the wallet address related to miner_id (eg.Owner, Worker, Controller, etc.) into lotus;")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Export private key from venus-wallet")]),t._v("\n$ ./venus-wallet "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WALLET_ADDRESS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nPassword:\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import to lotus")]),t._v("\n$  ./lotus wallet "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v("\nEnter private key: \n")])])]),e("ul",[e("li",[e("p",[t._v("Wait for the sector currently being sealed to be completed (ProveCommitSector message on the chain);")])]),t._v(" "),e("li",[e("p",[t._v("Stop venus-sealer and initialize a new repo with lotus-miner. The directory should not be the same as the repo of venus-sealer.")])])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TRUST_PARAMS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ./lotus-miner init --no-local-storage --actor"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("minerID"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sector-size"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("32G --nosync\n")])])]),e("ul",[e("li",[t._v("Create the "),e("code",[t._v("store path")]),t._v(" of lotus-miner, which is the same as the store path of venus-sealer, so there is no need to move the permanent storage file.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Do not add the `--init` flag, because venus-sealer has been created")]),t._v("\n./lotus-miner storage attach --store "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("VENUS_SEALER_STORE_PATH"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Modify the key=/storage/nextid in the metadata to ensure that the new sectorID does not start from 1.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Compile lotus-fix in the venus-sealer directory")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" lotus-fix\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Modify the nextid of lotus-miner")]),t._v("\n./lotus-fix -lotus-miner-repo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("~/.lotusminer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -sid"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("max sector id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Import the Sector data completed by venus-sealer, this is not necessary, because these can also be found on the chain.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("./lotus-fix -task"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("import-sector  -lotus-miner-repo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/home/litao/.lotusminer -venus-sealer-repo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=~")]),t._v("/.venussealer\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" sectors success.\n")])])]),e("blockquote",[e("p",[t._v("These two steps need to temporarily stop lotus-miner operation, so it is recommended to operate after init. In addition, if the operation is performed by the root user and lotus-miner is performed by a sub-user (eg. test), file authorization is required.")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" test:test /home/test/ -R\n")])])]),e("ul",[e("li",[t._v("Make a new sector")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./lotus-miner storage attach --init --seal "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./lotus-miner run "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" miner.log "),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n$ ./lotus-miner sectors pledge\n")])])]),e("p",[t._v("At this point, your cluster has been switched to lotus operation. For follow-up operations, please refer to lotus related documents. The previously created venus-sealer repo can also be deleted.")])])}),[],!1,null,null,null);s.default=n.exports}}]);